plugins {
    id 'java'
    id 'java-library'
    id 'org.springframework.boot' version '2.7.6'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.google.protobuf" version "0.8.19"    // protobuf plugin for gradle => https://github.com/google/protobuf-gradle-plugin
}

group 'org.reactivegrpcgradle'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    //bom
    implementation platform('com.linecorp.armeria:armeria-bom:1.20.3')
//    implementation platform('io.netty:4.1.82.Final')
    implementation platform('io.projectreactor:reactor-bom:2020.0.8')

    // spring
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

    // armeria
    implementation 'com.linecorp.armeria:armeria-spring-boot2-webflux-starter'
    implementation 'com.linecorp.armeria:armeria-spring-boot2-actuator-starter'

    // for gRPC
    implementation 'com.linecorp.armeria:armeria-grpc'
    implementation 'com.salesforce.servicelibs:reactor-grpc-stub:1.2.3'
    implementation 'io.projectreactor:reactor-core'
    implementation 'javax.annotation:javax.annotation-api'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
//    compileOnly 'org.projectlombok:lombok'
    implementation 'org.projectlombok:lombok'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

}

test {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.21.2'
    }

    plugins {
        // Locate a plugin with name 'grpc'.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.47.0'
        }
        // Locate a plugin with name 'reactorGrpc'.
        reactorGrpc {
            artifact = 'com.salesforce.servicelibs:reactor-grpc:1.2.3'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            // Configure the task - apply codegen plugins.
            grpc {}
            reactorGrpc {}
        }
    }
}